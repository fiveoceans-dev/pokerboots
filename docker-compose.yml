# PokerNFT - Root Level Docker Compose
# Backend services for local development (aligns with Vercel + Heroku deployment)
# Frontend runs natively with `yarn dev` for optimal development experience

version: '3.8'

services:
  # WebSocket Game Server
  pokernft-server:
    build:
      context: ./packages/nextjs
      dockerfile: server/Dockerfile
      target: production
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - REDIS_URL=redis://redis:6379
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3005,http://127.0.0.1:3000,http://127.0.0.1:3005
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - pokernft-network

  # Redis for session and game state persistence
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - pokernft-network

  # Redis Commander (Web UI for Redis - optional for debugging)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - pokernft-network
    profiles:
      - debug  # Only starts with --profile debug

# Named volumes for data persistence
volumes:
  redis-data:
    driver: local

# Custom network for service communication
networks:
  pokernft-network:
    driver: bridge