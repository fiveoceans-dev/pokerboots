# Docker Compose for PokerNFT Local Development
# This file sets up the complete development environment with Redis

version: '3.8'

services:
  # WebSocket Server
  pokernft-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - REDIS_URL=redis://redis:6379
      - ALLOWED_ORIGINS=http://localhost:3005,http://localhost:3000
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      # Mount source code for development (optional - remove for production-like testing)
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
    restart: unless-stopped
    networks:
      - pokernft-network

  # Redis for session and game state persistence
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - pokernft-network

  # Redis Commander (Web UI for Redis - optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - pokernft-network
    profiles:
      - debug

# Named volumes for data persistence
volumes:
  redis-data:
    driver: local

# Custom network for service communication
networks:
  pokernft-network:
    driver: bridge

# Development overrides (optional)
# To use: docker-compose -f docker-compose.yml -f docker-compose.override.yml up